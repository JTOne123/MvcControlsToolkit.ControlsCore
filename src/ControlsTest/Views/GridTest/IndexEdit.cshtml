@model ControlsTest.Models.ProductlistViewModel
@using ControlsTest.Controllers
@using System.Collections
@{
    ViewData["Title"] = "Edit immediate";
    if(Model.Query.AttachedTo == null)
    {
        Model.Query.AttachEndpoint(Url.Action("IndexEdit", "GridTest"));

    }
    Func<object, Task<IEnumerable>> getTasks = async x => ViewData["AllTypes"] as IEnumerable;
}
<style>
    tfoot .pagination, thead .pagination {
        margin: 0;
    }

    .full-cell {
        
        width: 100%;
    }

    table .input-validation-error {
        border: 1px solid red;
        background-color: mistyrose;
    }
</style>
<h2>@ViewData["Title"].</h2>
<div >
    <div asp-validation-summary="All" class="text-danger"></div>
    <form asp-antiforgery="true">
        <div asp-validation-summary="All" class="text-danger"></div>
        <grid id="main_grid" asp-for="Products.Data"
              type="Immediate"
              all-properties="true"
              mvc-controller="typeof(GridTestController)"
              row-id="immediate-example"
              operations="x => Functionalities.FullInLine 
                        | Functionalities.AddBefore | Functionalities.AddAfter
                        | Functionalities.Append | Functionalities.Prepend
                        | Functionalities.GroupDetail"
              class="table table-condensed table-bordered"
              query-for="Query"
              sorting-clauses="2"
              enable-query="true"
              rows-cache-key ="myTest"
              query-grouping-type="typeof(ProductViewModelGrouping)">
            <column asp-for="Products.Data.Element().TypeId">
                @*
               <external-key-static display-property="Products.Data.Element().TypeName"
    items-selector="@getTasks"
    query-display="false"
    items-value-property="Value"
    items-display-property="Display"
     />*@
                <external-key-remote display-property="Products.Data.Element().TypeName"
    items-value-property="Value"
    items-display-property="Display"
    query-display="false"
    items-url="@(Url.Action("GetTypes", "DetailTest", new { search = "_zzz_" }))"
    dataset-name="product-types"
    url-token="_zzz_"
    max-results="20" />
                </column> />
                <column asp-for="Products.Data.Element().Price" colspan="2" />
                <row-type asp-for="Products.Data.SubInfo<ProductMaintenanceViewModel>().Model"
                          from-row="0">
                    <column asp-for="Products.Data.Element().Price" colspan="1" />
                    <column asp-for="Products.Data.SubElement<ProductMaintenanceViewModel>().MaintenanceYearlyRate" />
                </row-type>
                <row-type asp-for="Products.Data.SubInfo<ProductViewModelGrouping>().Model" from-row="0">
                    <column asp-for="Products.Data.SubElement<ProductViewModelGrouping>().ChosenCurrencyCount"/>
                    <column asp-for="Products.Data.SubElement<ProductViewModelGrouping>().AvailableCount" />
                    <column asp-for="Products.Data.SubElement<ProductViewModelGrouping>().DateValidCount" />
                    <column asp-for="Products.Data.SubElement<ProductViewModelGrouping>().TypeIdCount" />
                </row-type>
                <toolbar zone-name="@LayoutStandardPlaces.Header">
                    <div class="row">

                        <div class="col-xs-4">
                            <copy-html name="main-pager">
                                <pager
                                       class="pagination pagination-sm"
                                       max-pages="4"
                                       page-size-default="3"
                                       total-pages="Products.TotalPages" />
                            </copy-html>

                        </div>
                        <verify-permission required-permissions="@(Functionalities.Append | Functionalities.Prepend)">
                            <div class="col-xs-8">

                                <button type="button" data-operation="add append 0" class="btn btn-sm btn-primary">nuovo prodotto</button>
                                <button type="button" data-operation="add append 1" class="btn btn-sm btn-primary">nuovo prodotto con manutenzione</button>
                                <button type="button" data-operation="add prepend 0" class="btn btn-sm btn-primary">nuovo prodotto (prep)</button>
                                <button type="button" data-operation="add prepend 1" class="btn btn-sm btn-primary">nuovo prodotto con manutenzione (prep)</button>
                            </div>
                        </verify-permission>
                    </div>
                    <query  type="Filtering" />
                    <query  type="Sorting" />
                    <query  type="Grouping"  />
                </toolbar>
                <toolbar zone-name="@LayoutStandardPlaces.Footer">
                    <paste-html name="main-pager" />
                </toolbar>
            </grid>
        <verify-permission query-for="Query" required-permissions="@(Functionalities.Append | Functionalities.Prepend)"
                           permissions="x => Functionalities.FullInLine 
                        | Functionalities.AddBefore | Functionalities.AddAfter
                        | Functionalities.Append | Functionalities.Prepend">
            <div class="form-group col-xs-12">
                <button type="button" data-operation="add append 0" class="btn btn-primary" data-target="main_grid" data-control-type="server-immediate-grid">nuovo prodotto</button>
                <button type="button" data-operation="add append 1" class="btn btn-primary" data-target="main_grid" data-control-type="server-immediate-grid">nuovo prodotto con manutenzione</button>
                <button type="button" data-operation="add prepend 0" class="btn btn-primary" data-target="main_grid" data-control-type="server-immediate-grid">nuovo prodotto (prep)</button>
                <button type="button" data-operation="add prepend 1" class="btn btn-primary" data-target="main_grid" data-control-type="server-immediate-grid">nuovo prodotto con manutenzione (prep)</button>

            </div>
        </verify-permission>
    </form>
    
    @*<query-inline   type="Filtering" asp-for="Query" collection-for="Products.Data" row-collection-name="myTest">
    
    </query-inline>
    <query-inline type="Sorting" asp-for="Query" collection-for="Products.Data" row-collection-name="myTest" />
    <query-inline type="Grouping" asp-for="Query" collection-for="Products.Data" 
                  grouping-type="@typeof(ProductViewModelGrouping)" row-collection-name="myTest" />*@
      
    </div>

    @section Scripts {
        @*<link href="~/lib/mvcct-controls-server/modules-bootstrap/typeaheadjs3.css" rel="stylesheet" />
                @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
                <script src="~/lib/corejs-typeahead/dist/typeahead.bundle.js"></script>
            <script src="~/lib/mvcct-controls-server/mvcct.controls.server.js"></script>
            <script src="~/lib/mvcct-controls-server/modules-bootstrap/mvcct.controls.server.autocomplete.js"></script>*@

    <link href="~/lib/awesomplete/awesomplete.css" rel="stylesheet" />
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script src="~/lib/awesomplete/awesomplete.min.js"></script>
    <script src="~/lib/mvcct-controls/mvcct.controls.min.js"></script>
    <script src="~/lib/mvcct-controls/modules/mvcct.controls.autocomplete.min.js"></script>
    <script src="~/lib/mvcct-controls/modules/mvcct.controls.ajax.min.js"></script>
    <script src="~/lib/mvcct-controls/modules/mvcct.controls.serverGrid.min.js"></script>
    <script src="~/lib/mvcct-odata/dest/global/mvcct.odata.js"></script>
    <script src="~/lib/mvcct-controls/modules/mvcct.controls.query.min.js"></script>
}
