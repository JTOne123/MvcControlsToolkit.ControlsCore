@model ControlsTest.Models.ProductlistBatchViewModel
@using ControlsTest.Controllers
@{
    ViewData["Title"] = "Batch grid";
}
<style>
    tfoot .pagination, thead .pagination {
        margin: 0;
    }
    .full-cell {
        border:none;
        width: 100%;
    }
    table .input-validation-error
    {
        border: 1px solid red;
        background-color: mistyrose;
    }
</style>
<h2>@ViewData["Title"].</h2>
<form asp-action="IndexBatchDetail">
    <div>
        <div asp-validation-summary="All" class="text-danger"></div>
        <grid id="main_grid" asp-for="ModifiedProducts"
              type="Batch"
              all-properties="true"
              mvc-controller="typeof(GridTestController)"
              operations="x => Functionalities.FullDetail | Functionalities.AddBeforeDetail | Functionalities.AddAfterDetail | Functionalities.ShowDetail"
              row-id="batch-example-detail"
              class="table table-condensed table-bordered">
            <column asp-for="ModifiedProducts.Element().TypeId">
                @*<external-key-static display-property="ModifiedProducts.Element().TypeName"
                    items-selector="@getTasks"
                    items-value-property="Value"
                    items-display-property="Display"
                     />*@
                <external-key-remote display-property="ModifiedProducts.Element().TypeName"
                                     items-value-property="Value"
                                     items-display-property="Display"
                                     items-url="@(Url.Action("GetTypes", "DetailTest", new { search = "_zzz_" }))"
                                     dataset-name="product-types"
                                     url-token="_zzz_"
                                     max-results="20" />
            </column> />
            <column asp-for="ModifiedProducts.Element().Price" colspan="2" />
            <row-type asp-for="ModifiedProducts.SubInfo<ProductMaintenanceViewModel>().Model"
                      mvc-controller="typeof(GridTestController)"
                      from-row="0">
                <column asp-for="ModifiedProducts.Element().Price" colspan="1" />
                <column asp-for="ModifiedProducts.SubElement<ProductMaintenanceViewModel>().MaintenanceYearlyRate" />
            </row-type>
            <toolbar zone-name="@LayoutStandardPlaces.Header">
                <div class="row">
                    
                    <div class="col-xs-4">
                        <copy-html name="main-pager">
                            <pager mode="CustomPages"
                                   class="pagination pagination-sm"
                                   max-pages="4"
                                   current-page="Products.Page"
                                   page-size-default="3"
                                   total-pages="Products.TotalPages"
                                   skip-url-token="_zzz_"
                                   url-default="@Url.Action("IndexBatchDetail", "GridTest", new {page="_zzz_" })" />
                        </copy-html>
                        </div>
                        <div class="col-xs-8">
                            <button type="button" data-operation="add-detail append 0" class="btn btn-sm btn-primary">nuovo prodotto</button>
                            <button type="button" data-operation="add-detail append 1" class="btn btn-sm btn-primary">nuovo prodotto con manutenzione</button>
                            <button type="button" data-operation="add-detail prepend 0" class="btn btn-sm btn-primary">nuovo prodotto (prep)</button>
                            <button type="button" data-operation="add-detail prepend 1" class="btn btn-sm btn-primary">nuovo prodotto con manutenzione (prep)</button>
                        </div>
                    </div>   
            </toolbar>
            <toolbar zone-name="@LayoutStandardPlaces.Footer">
                <paste-html name="main-pager" />
            </toolbar>
        </grid>
        <store-model asp-for="Products" encrypted="true"/>
    </div>

    <div class="form-group col-xs-12">
        <button type="button" data-operation="add-detail append 0" class="btn btn-primary" data-target="main_grid" data-control-type="server-batch-grid">nuovo prodotto</button>
        <button type="button" data-operation="add-detail append 1" class="btn btn-primary" data-target="main_grid" data-control-type="server-batch-grid">nuovo prodotto con manutenzione</button>
        <button type="button" data-operation="add-detail prepend 0" class="btn btn-primary" data-target="main_grid" data-control-type="server-batch-grid">nuovo prodotto (prep)</button>
        <button type="button" data-operation="add-detail prepend 1" class="btn btn-primary" data-target="main_grid" data-control-type="server-batch-grid">nuovo prodotto con manutenzione (prep)</button>
        <button type="submit" class="btn btn-primary">
            Submit changes
        </button>
    </div>
</form>
@section Scripts {
    @*<link href="~/lib/mvcct-controls-server/modules-bootstrap/typeaheadjs3.css" rel="stylesheet" />
            @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
            <script src="~/lib/corejs-typeahead/dist/typeahead.bundle.js"></script>
        <script src="~/lib/mvcct-controls-server/mvcct.controls.server.js"></script>
        <script src="~/lib/mvcct-controls-server/modules-bootstrap/mvcct.controls.server.autocomplete.js"></script>*@

    <link href="~/lib/awesomplete/awesomplete.css" rel="stylesheet" />
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script src="~/lib/awesomplete/awesomplete.min.js"></script>
    <script src="~/lib/mvcct-controls/mvcct.controls.min.js"></script>
    <script src="~/lib/mvcct-controls/modules/mvcct.controls.autocomplete.min.js"></script>
<script src="~/lib/mvcct-controls/modules/mvcct.controls.ajax.min.js"></script>
    <script src="~/lib/mvcct-controls/modules/mvcct.controls.serverGrid.js"></script>
}

