@model Object
@using MvcControlsToolkit.Core.Templates
@using MvcControlsToolkit.Core.TagHelpers
@using MvcControlsToolkit.Core.Views
@using Microsoft.Extensions.Localization
@using System.Globalization
@{

    var id = ViewData["id"] as string;
    var localizer = ViewData["localizer"] as Func<string, string>;
    var title = ViewData["title"] as string;
    var ReadOnly = (bool)ViewData["ReadOnly"];
    var KeyName = ViewData["KeyName"] as string;
    var DetailColumnAdjustView = ViewData["ColumnAdjust"] as string;
    var rowDefault = (int)ViewData["RowIndex"];
}
<div class="modal fade" id="@id" tabindex="-1" role="dialog" aria-labelledby="@(id+"_label")">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="@(id+"_label")">@(localizer(title))</h4>
            </div>
            <div class="modal-body">
                <detail-form
                    asp-for="@Model"
                    all-properties="@true" 
                    localization-type="@typeof(MvcControlsToolkit.Controllers.ServerCrudController)" 
                    key="@KeyName"
                    form-method="POST"
                    form-action="@Context.Request.Path@Context.Request.QueryString"
                    edit-mode-default="@(!ReadOnly)"
                    model-null-row-default="@rowDefault"
                    asp-antiforgery="true"
                    no-submit="@true"
                >
                    @if(DetailColumnAdjustView!= null)
                    {
                        <import-settings asp-for="@Model" view-name="@DetailColumnAdjustView"/>
                    }
                </detail-form>
            </div>
        </div>
    </div>
</div>




