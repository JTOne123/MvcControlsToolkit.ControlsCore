@model Object
@using MvcControlsToolkit.Core.Templates
@using Microsoft.Extensions.Options
@using System.Text
@using System.Globalization

@functions{
    //workaround forr issue https://github.com/aspnet/Mvc/issues/2430
    private  string getEnumDisplayName(Type type, string o, IHtmlHelper h)
    {
        string displayName = null;

        foreach (SelectListItem item in h.GetEnumSelectList(type))
        {
            if (o == item.Value)
            {
                displayName = item.Text ?? item.Value;
            }
        }
        return displayName;
    }
}
@{
    var metaData = ViewData.ModelMetadata;
    var col = ViewData["Options"] as Column;

}
<div class="@col.GetTotalClass(SupportedGridSystems.Bootstrap3, false)">
    @if (metaData.UnderlyingOrModelType == typeof(bool))
    {
        <label class="control-label" asp-for="@Model">@col.For.Metadata.GetDisplayName()</label>
        <p @Html.Raw("class='" + (col.InputCssClass != null ? col.CheckboxCssClass : "form-control-static") + "'")>
            <input disabled asp-for="@Model" type="checkbox"   />
        </p>
    }
    else
    {
    <label asp-for="@Model" class="control-label">@col.For.Metadata.GetDisplayName()</label>
<p  @Html.Raw("class='" + (col.InputCssClass != null ? col.InputCssClass : "form-control-static") + "'") >
            @if(Model == null)
            {
                @(col.NullDisplayText??string.Empty)

            }
            else if (Model is IFormattable && !string.IsNullOrEmpty(col.DisplayFormat))
            {
                @(string.Format(CultureInfo.CurrentCulture, col.DisplayFormat, Model as IFormattable))
            }
            else if (ViewData.ModelMetadata.IsEnum)
            {
                @(getEnumDisplayName(col.For.Metadata.UnderlyingOrModelType, ((int)Model).ToString(CultureInfo.CurrentCulture), Html))
            }
            else
            {
                @Html.Display(string.Empty)
            }
        </p>

    }
</div>


